name: Release and Publish

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.2.0)'
        required: false
        type: string

permissions:
  contents: write

jobs:
  prebuild:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
          - os: macos-latest
            platform: darwin
            arch: x64
          - os: macos-latest
            platform: darwin  
            arch: arm64
          - os: windows-latest
            platform: win32
            arch: x64

    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Rebuild native modules for target
        run: |
          npm rebuild --build-from-source
        env:
          npm_config_arch: ${{ matrix.arch }}
          npm_config_target_arch: ${{ matrix.arch }}
          npm_config_disturl: https://nodejs.org/dist
          npm_config_runtime: node
          npm_config_cache: ~/.npm
          npm_config_build_from_source: true
          
      - name: Package prebuilt binaries
        shell: bash
        run: |
          mkdir -p prebuilds/${{ matrix.platform }}-${{ matrix.arch }}
          find node_modules -name "*.node" -path "*/build/Release/*" | while read -r file; do
            module_name=$(echo "$file" | sed -E 's|node_modules/([^/]+)/.*|\1|')
            mkdir -p "prebuilds/${{ matrix.platform }}-${{ matrix.arch }}/$module_name"
            cp "$file" "prebuilds/${{ matrix.platform }}-${{ matrix.arch }}/$module_name/"
          done
          tar -czf "prebuilds-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz" prebuilds/
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prebuilds-${{ matrix.platform }}-${{ matrix.arch }}
          path: prebuilds-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz
          
  release:
    needs: prebuild
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Set version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version || '0.2.0' }}"
          else
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Create Release
        if: github.event_name != 'workflow_dispatch'
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*.tar.gz
          tag_name: ${{ github.ref }}
          name: ${{ format('Release v{0}', env.VERSION) }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload artifacts to existing release
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*.tar.gz
          tag_name: v${{ env.VERSION }}
          name: ${{ format('Release v{0}', env.VERSION) }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Install dependencies
        run: |
          npm ci
          npm rebuild --verbose
          
      - name: Run tests
        run: npm test
        
      - name: Build
        run: npm run build
        
      - name: Extract version from tag or input
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if [ "$CURRENT_VERSION" != "$VERSION" ]; then
            npm version $VERSION --no-git-tag-version
          else
            echo "Version already set to $VERSION"
          fi
          
      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}